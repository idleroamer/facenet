// Code generated by facenet. DO NOT EDIT.
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Tmds.DBus;

namespace {{module.qualified_name}}
{
     {% for signal in interface.signals %}
     public struct {{signal.name}}Args
     {
        {% for parameter in signal.parameters %}
        public {{parameter.facenet_type}} {{parameter.name}};
        {% endfor %}
     }
     {% endfor %}

    [DBusInterface("{{interface.qualified_name}}")]
    public interface IDBus{{interface.name}} : IDBusObject
    {
    {% for operation in interface.operations %}
    {% if operation.comment %}
        {{operation.comment}}
    {% endif %}
        Task{% if operation.has_return_value %}<{{operation.facenet_type}}>{% endif %} {{operation.name}}Async({%- for parameter in operation.parameters -%} {{parameter.facenet_type}} {{parameter.name}}{{ ", " if not loop.last else "" }}{% endfor %});
    {% endfor %}

    {% for signal in interface.signals %}
        Task<IDisposable> Watch{{signal.name}}Async(Action<{{signal.name}}Args> reply);
    {% endfor %}

        Task<{{interface.name}}Properties> GetAllAsync();
        Task<object> GetAsync(string prop);
        Task SetAsync(string prop, object val);
        Task<IDisposable> WatchPropertiesAsync(Action<PropertyChanges> handler);
    }
}
