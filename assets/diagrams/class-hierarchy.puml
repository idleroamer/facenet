@startuml
skinparam class {
BackgroundColor PaleGreen
ArrowColor SeaGreen
BorderColor SpringGreen
BackgroundColor<<Impl>> Wheat
BorderColor<<Impl>> Tomato
}

package "Client Process" <<Rectangle>> #Lavender {
  entity DBusProxy
}

package "Service Process" <<Rectangle>> #LightBlue {
  entity DBusAdapter
  entity ConcreteImpl
  interface Interface
}

interface Interface {
 <METHODS>
 <PROPERTIES>
 <EVENTS>
}

left to right direction

together {
interface DBusInterface
() METHODS
() SIGNALS
() PROPERTIES
}

DBusAdapter ..|> DBusInterface: implements
DBusAdapter --> METHODS
DBusAdapter --> SIGNALS
DBusAdapter --> PROPERTIES

DBusProxy ..|> DBusInterface: implements
METHODS --> DBusProxy 
SIGNALS --> DBusProxy 
PROPERTIES --> DBusProxy


entity DBusAdapter {
 DBusAdapter(Interface)
 RegisterObject(connection)
}

entity DBusProxy {
 DBusProxy(connection)
 CreateProxy()
}

entity ConcreteImpl <<Impl>> {
 <METHODS>
}


Interface <|.. ConcreteImpl : implements
DBusAdapter o- ConcreteImpl: aggregates


legend
|<back:PaleGreen>   </back>| Auto-generated |
|<back:Wheat>   </back>| to be implemented |
endlegend

@enduml